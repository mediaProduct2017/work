df -h 系统磁盘使用情况
du -h 当前目录所占空间，一般来说包括当前目录下所有文件夹的大小

top 看内存情况

lscpu 看cpu情况

nvidia-smi 看nvidia显卡情况

find . -type f -size +100M
找到当前目录下大小大于100M的文件

cd - 相当于cd .. 返回父目录

kernel version information:

uname -a

Distribution Information:

cat /etc/lsb-release

Install vim:

To make sure you have the latest sources.list:

sudo apt-get update

then run:

sudo apt-get install vim

从本地向服务器传输文件夹

scp -r tokenizers user-name@ip:/home/deco/downloads
 
从host向docker container传输文件夹

sudo docker cp tokenizers/. decanlp-container:/root/nltk_data/tokenizers

从host向docker container传输文件

docker cp foo.txt mycontainer:/foo.txt

remove everything in a folder:
rm ./*

exit 退出linux，常用于退出远程机器，退出虚拟机等

nohup python nohup_demo.py 通过nohup让程序长时间运行，ctrl + c只会影响显示，不会影响真正的进程

nohup python nohup_demo.py & 一开始就在后台运行，同一个terminal还可以操作其他命令

ps -a 作用有限，只能展示少量进程

ps a 显示现行终端机下的所有程序，包括其他用户的程序

ps -ef 最全的展示进程的命令

ps -ef | grep python 列出所有python进程

kill -9 pid 杀掉某个进程

在linux下运行server的时候，需要注意base_dir的设置，比如，对于python，在引用自己写的包的时候，一般采用绝对路径，这在pycharm中是可以识别的。但是，在linux服务器中，系统并不知道base_dir是什么地方，有几种处理办法：

第一，在server.py的脚本处，加入sys.path.append(os.path.dirname(os.path.abspath(__file__))之类的语句，把base_dir加到系统目录当中

第二，在linux中设置，一种是绝对设置，把base_dir的位置放在PATH环境变量中，另一种是相对设置，把当前目录放在PATH环境变量中，然后进到base_dir所在目录，在该目录下运行server脚本。

在linux系统下把多个终端合并在一个窗口(比如，要在一台机器上开多个服务器，最好把这多个终端合并成一个窗口)

1. 用正常的方式打开一个终端。

2. 使用组合键 ctrl+shift+t , 这时就在同一个窗口中打开了另一个终端，当然再按一次ctrl+shift+t，会再生成一个，需要多少了大家可以自行决定。

3. 按组合键Alt+1，就会切换到第一个终端，按Alt+2，就会切换到第2个终端，Alt+n,对应的就会切换到第n个终端。

wget 是下载文件的工具，并不会试图展示下载的文件

curl 是远程模拟浏览器的工具，涉及到两部，首先是下载数据，然后是展示数据

apt install wget
or
apt-get install wget

更新安装源
apt-get update

apt-get install nodejs

apt-get install npm

nodejs -v

npm -v

create a symlink
ln -s `which nodejs` /usr/bin/node
ln -s /usr/local/bin/node /usr/bin/node
ln -s /usr/local/bin/npm /usr/bin/npm

Update npm:
npm install npm@latest -g

wget https://nodejs.org/dist/v8.11.4/node-v8.11.4-linux-x64.tar.xz
apt-get install xz-utils
tar -C /usr/local --strip-components 1 -xJf node-v8.11.4-linux-x64.tar.xz

which -a node

npm config set registry=http://registry.npm.taobao.org

npm config set puppeteer_download_host=https://storage.googleapis.com.cnpmjs.org

unzip chrome-linux.zip -d /destination_dir


ls *chrome*

ping example.com 检测dns和ip地址能不能连上

nmap -p 80 example.com 检测80端口有没有开放


